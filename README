# **Pet Health Tracker Web Application**

## **Overview**
A comprehensive browser-based application for managing pet health records. Store profiles, track medical history, set reminders, and share pet information easily. All data is stored locally in your browser.

## **Features**
### 🐾 Core Features
- **Pet Profiles**:
  - Save detailed profiles (name, breed, age, weight)
  - Microchip information tracking
  - Mood tracking with emoji indicators
  - Emergency contact storage
  - Photo uploads

- **Health Management**:
  - Allergy and medical history logs
  - Custom diet plans
  - Vaccination/deworming reminders
  - Medical check-up scheduling
  - Grooming reminders

- **Profile Actions**:
  - ✏️ Edit existing profiles
  - 🗑️ Delete profiles
  - 🖨️ Print professional records
  - 🔳 Generate QR codes
  - 📤 Share profiles via native sharing

## **Installation**
```bash
git clone https://github.com/your-repo/pet-health-tracker.git
cd pet-health-tracker

OR
Download ZIP → Extract → Open index.html in any browser

Usage Guide
Authentication:

Sign up or log in to access your pet profiles

Adding Pets:
1. Fill all pet details
2. Upload a photo (optional)
3. Set important reminders
4. Click "Save Profile"

Managing Profiles:

Edit: Pre-fills form with existing data
Share: Mobile: Native share dialog | Desktop: Copy-paste prompt
QR Code: Generates scannable health summary

Reminders:
Overdue reminders highlighted in red
Upcoming reminders shown in green

Technical Notes
🛡️ Data Security: All data stored in browser's localStorage
📱 Responsive: Works on mobile/tablet/desktop
🖨️ Print-Optimized: Clean formatting for physical records

Troubleshooting:
If profiles disappear: Check browser storage settings
Blank screen: Enable JavaScript in browser settings
Share not working: Your browser may not support Web Share API

Contributing:
Fork repository
Create feature branch (git checkout -b feature/amazing-feature)
Commit changes (git commit -m 'Add amazing feature')
Push to branch (git push origin feature/amazing-feature)
Open Pull Request

License
Proprietary License © 2024


#processing-loader  (overlay div)
│
├─ loader-animation1  → 🌀 Cat spinner (for loading, saving, updating)
│    style="display:none;" initially
│
├─ loader-animation2  → 🐾 Paws animation (for light/success feedback)
│    style="display:none;" initially
│
├─ loader-message           → Default loading text
│    style="display:block;" or "none" controlled by helper
│
├─ loader-success-saving    → "Profile saved!" message
│    style="display:none;" initially
│
├─ loader-success-updating  → "Profile updated!" message
│    style="display:none;" initially
│
├─ loader-success-deleting  → "Profile deleted!" message
│    style="display:none;" initially
│
├─ loader-error-export      → "Export failed" message
│    style="display:none;" initially
│
├─ loader-share-copied      → "Link copied to clipboard!" message
│    style="display:none;" initially
│
├─ loader-share-success     → "Shared successfully!" message
│    style="display:none;" initially
│
└─ loader-share-error       → "Couldn't share" message
     style="display:none;" initially


here’s a flow example for exportAllPetCards() showing how the loader + paws animation + messages work in sequence:
User clicks "Export All" button
          │
          ▼
showLoader(true, "export-loading", "paws")
  → #processing-loader becomes visible
  → loader-animation2 (paws) shows
  → loader-export-loading message shows
          │
          ▼
Browser paints overlay & paws animation
          │
          ▼
Heavy processing starts:
  - loadPets()
  - html2canvas rendering
  - ZIP or individual downloads
          │
          ▼
Success? ────────────────┐
   Yes                  │
   showLoader(true, "success-export", "paws")
   → paws animation continues
   → success message shows
   → stays visible 2s
                         │
   After 2s:             ▼
   showLoader(false) → hides overlay and animation/messages
                         │
   Done export           ▼
                         END
          │
          └ No (error)
             showLoader(true, "loader-error-export", "paws")
             → paws animation shows
             → error message visible
             → stays visible 3s
             After 3s: showLoader(false)
             END

